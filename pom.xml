<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- 
		Using spring-boot-starter-parent to update dependencies easier and ensure that all dependencies work well together
		this parent having most of the commonly used dependencies defined with tested versions across Java projects.
	-->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.3</version>
		<relativePath />
	</parent>

	<groupId>io.github.raduking</groupId>
	<artifactId>openapi-offline-generator-plugin</artifactId>
	<version>1.0.1</version>
	<packaging>maven-plugin</packaging>

	<name>${project.groupId}:${project.artifactId}</name>
	<description>A Maven plugin for generating OpenAPI documentation.</description>
	<url>https://github.com/raduking/openapi-offline-generator-plugin</url>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>raduking</id>
			<name>Radu Sebastian LAZIN</name>
			<email>raduking@gmail.com</email>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:git://github.com/raduking/openapi-offline-generator-plugin.git</connection>
		<developerConnection>scm:git:ssh://github.com:raduking/openapi-offline-generator-plugin.git</developerConnection>
		<url>https://github.com/raduking/openapi-offline-generator-plugin/tree/master</url>
	</scm>

	<properties>
		<java.version>21</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Publishing dependencies versions -->
		<gpg.plugin.version>3.2.8</gpg.plugin.version>
		<central.publishing.plugin.version>0.9.0</central.publishing.plugin.version>

		<!-- Jacoco arguments empty by default -->
		<jacocoArgLine></jacocoArgLine>

		<!-- Testing dependencies versions -->
		<jacoco.plugin.version>0.8.13</jacoco.plugin.version>
		<project.info.reports.plugin.version>3.9.0</project.info.reports.plugin.version>

		<!-- Testing properties -->
		<integration.tests.pattern>**/*IT.java</integration.tests.pattern>
		
		<!-- Testing command line options -->
		<oogpArgLine>
		</oogpArgLine>
	</properties>

	<dependencies>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>

		<!-- Swagger -->
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-jaxrs2-jakarta</artifactId>
			<version>2.2.39</version>
		</dependency>

		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-api</artifactId>
			<version>2.8.13</version>
   		</dependency>

		<!-- Jakarta -->
		<dependency>
			<groupId>jakarta.ws.rs</groupId>
			<artifactId>jakarta.ws.rs-api</artifactId>
		</dependency>

		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
		</dependency>
		
		<!-- Maven plugin development dependencies -->
		<dependency>
			<groupId>org.apache.maven.plugin-tools</groupId>
			<artifactId>maven-plugin-annotations</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<version>3.9.6</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-core</artifactId>
			<version>3.9.11</version>
			<scope>provided</scope>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

		<!-- Apiphany -->
		<dependency>
			<groupId>io.github.raduking</groupId>
			<artifactId>apiphany</artifactId>
			<version>1.0.13</version>
		</dependency>

		<!-- Javadoc -->
		<dependency>
			<groupId>com.github.therapi</groupId>
			<artifactId>therapi-runtime-javadoc</artifactId>
			<version>0.15.0</version>
		</dependency>

		<!-- Testing -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-main-resources</id>
						<phase>process-resources</phase>
						<configuration>
							<outputDirectory>${project.build.outputDirectory}</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-test-resources</id>
						<phase>process-test-resources</phase>
						<configuration>
							<outputDirectory>${project.build.testOutputDirectory}</outputDirectory>
							<resources>
								<resource>
									<directory>src/test/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-resources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.outputDirectory}/static/docs</outputDirectory>
							<resources>
								<resource>
									<directory>${project.build.directory}/generated-docs</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>${jacocoArgLine} ${oogpArgLine}</argLine>
					<excludes>
						<exclude>${integration.tests.pattern}</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<argLine>${jacocoArgLine} ${oogpArgLine}</argLine>
					<includes>
						<include>${integration.tests.pattern}</include>
					</includes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<additionalOptions>-Xmaxwarns 10000</additionalOptions>
				</configuration>
			</plugin>

			<!--Jacoco code coverage -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.plugin.version}</version>
				<executions>
					<execution>
						<id>pre-unit-test</id>
						<phase>test-compile</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.reporting.outputDirectory}/jacoco.exec</destFile>
							<propertyName>jacocoArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.reporting.outputDirectory}/jacoco.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.diffplug.spotless</groupId>
				<artifactId>spotless-maven-plugin</artifactId>
				<version>2.46.1</version>
				<dependencies>
					<dependency>
						<groupId>org.eclipse.jdt</groupId>
						<artifactId>org.eclipse.jdt.core</artifactId>
						<version>3.42.0</version>
					</dependency>
				</dependencies>
				<configuration>
					<java>
						<eclipse>
							<file>${project.basedir}/formatter/java-formatter.xml</file>
							<version>4.36</version>
						</eclipse>
						<removeUnusedImports/>
						<trimTrailingWhitespace/>
					</java>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>apply</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- mvn openapi-offline-generator-plugin:generate -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-plugin-plugin</artifactId>
				<version>3.13.1</version>
				<configuration>
					<goalPrefix>openapi-offline-generator-plugin</goalPrefix>
				</configuration>
				<executions>
					<execution>
						<id>default-descriptor</id>
						<goals>
							<goal>descriptor</goal>
						</goals>
					</execution>
				</executions>
			</plugin>			
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>active-on-property-environment-release</id>
			<activation>
				<property>
					<name>release</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<!--
						Activate it with: -Drelease=true
					-->
					<!-- Artifact signing for publishing -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>${gpg.plugin.version}</version>
						<executions>
							<execution>
							<id>sign-artifacts</id>
							<phase>verify</phase>
							<goals>
								<goal>sign</goal>
							</goals>
							</execution>
						</executions>
						<configuration>
							<keyname>${env.MAVEN_GPG_PLUGIN_KEY}</keyname>
							<gpgArguments>
								<argument>--pinentry-mode</argument>
								<argument>loopback</argument>
							</gpgArguments>
						</configuration>
					</plugin>

					<!-- Publish to Maven Central -->
					<!-- https://central.sonatype.org/publish/publish-portal-guide/ -->
					<!-- For snapshots: https://central.sonatype.org/publish/publish-portal-snapshots/ -->
					<plugin>
						<groupId>org.sonatype.central</groupId>
						<artifactId>central-publishing-maven-plugin</artifactId>
						<version>${central.publishing.plugin.version}</version>
						<extensions>true</extensions>
						<configuration>
							<autoPublish>true</autoPublish>
							<deploymentName>release-${project.artifactId}-${project.version}</deploymentName>
							<publishingServerId>central</publishingServerId>
						</configuration>
					</plugin>

				</plugins>
			</build>
		</profile>
    	
		<profile>
			<id>eclipse</id>
			<properties>
				<jacocoArgLine></jacocoArgLine>
			</properties>
		</profile>
	</profiles>

	<reporting>
		<plugins>
			<!-- Reports -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${project.info.reports.plugin.version}</version>
			</plugin>

			<!--Jacoco code coverage -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.plugin.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<!-- select non-aggregate reports -->
							<report>report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>

	<distributionManagement>
		<snapshotRepository>
			<id>central</id>
			<name>Central Repository Snapshots</name>
			<url>https://central.sonatype.com/repository/maven-snapshots</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</snapshotRepository>
  		<repository>
			<id>central</id>
			<name>Central Repository</name>
    		<url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<repositories>
	</repositories>

</project>

